<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" ><generator uri="https://jekyllrb.com/" version="3.7.0">Jekyll</generator><link href="https://veerendra2.github.io/feed.xml" rel="self" type="application/atom+xml" /><link href="https://veerendra2.github.io/" rel="alternate" type="text/html" /><updated>2018-01-30T03:39:36+05:30</updated><id>https://veerendra2.github.io/</id><title type="html">Veerendra’s Blog</title><subtitle>#networking #python #linux</subtitle><entry><title type="html">KVM Hypervior Cheatsheets</title><link href="https://veerendra2.github.io/kvm-hyperviour-cheatsheets/" rel="alternate" type="text/html" title="KVM Hypervior Cheatsheets" /><published>2018-01-27T00:00:00+05:30</published><updated>2018-01-27T00:00:00+05:30</updated><id>https://veerendra2.github.io/kvm-hyperviour-cheatsheets</id><content type="html" xml:base="https://veerendra2.github.io/kvm-hyperviour-cheatsheets/">&lt;h3 id=&quot;1-install-packages&quot;&gt;1. Install Packages&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;Check system  is  capable of running KVM: &lt;a href=&quot;http://manpages.ubuntu.com/manpages/trusty/man1/kvm-ok.1.html&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;kvm-ok&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-shell&quot; data-lang=&quot;shell&quot;&gt;    
&lt;span class=&quot;nb&quot;&gt;sudo &lt;/span&gt;apt-get &lt;span class=&quot;nb&quot;&gt;install &lt;/span&gt;qemu-kvm libvirt-bin bridge-utils virt-manager &lt;span class=&quot;nt&quot;&gt;-y&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;h3 id=&quot;2-create-kvmqemu-hard-disk-file&quot;&gt;2. Create KVM/Qemu Hard Disk File&lt;/h3&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-shell&quot; data-lang=&quot;shell&quot;&gt;    qemu-img create &lt;span class=&quot;nt&quot;&gt;-f&lt;/span&gt; raw &amp;lt;name&amp;gt;.img &amp;lt;Size&amp;gt;
    Example:
        qemu-img create &lt;span class=&quot;nt&quot;&gt;-f&lt;/span&gt; raw ubuntu14-HD.img 10G&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;ul&gt;
  &lt;li&gt;Then copy the HD file to &lt;code class=&quot;highlighter-rouge&quot;&gt;/var/lib/libvirt/images/&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;3-launch-vm-with-virt-install&quot;&gt;3. Launch VM with &lt;code class=&quot;highlighter-rouge&quot;&gt;virt-install&lt;/code&gt;&lt;/h3&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-shell&quot; data-lang=&quot;shell&quot;&gt;    virt-install &lt;span class=&quot;nt&quot;&gt;--name&lt;/span&gt; spinnaker &lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;--ram&lt;/span&gt; 11096 &lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;--vcpus&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;4 &lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;--os-type&lt;/span&gt; linux &lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;--os-variant&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;ubuntutrusty &lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;--accelerate&lt;/span&gt; &lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;--nographics&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-v&lt;/span&gt;  &lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;--disk&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;path&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;/var/lib/libvirt/images/ubuntu14-HD.img,size&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;8 &lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;--extra-args&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;console=ttyS0&quot;&lt;/span&gt; &lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;--location&lt;/span&gt; /opt/ubuntu14.iso &lt;span class=&quot;nt&quot;&gt;--force&lt;/span&gt; &lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;--network&lt;/span&gt; bridge:virbr0&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;ul&gt;
  &lt;li&gt;Create bridge &lt;code class=&quot;highlighter-rouge&quot;&gt;virbr0&lt;/code&gt; if it is necessary&lt;/li&gt;
  &lt;li&gt;To know what are &lt;code class=&quot;highlighter-rouge&quot;&gt;--os-variant&lt;/code&gt; available, run &lt;code class=&quot;highlighter-rouge&quot;&gt;virt-install --os-variant list&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;Specify &lt;code class=&quot;highlighter-rouge&quot;&gt;--location&lt;/code&gt; and &lt;code class=&quot;highlighter-rouge&quot;&gt;--disk&lt;/code&gt; locations&lt;/li&gt;
  &lt;li&gt;Specify &lt;code class=&quot;highlighter-rouge&quot;&gt;--ram&lt;/code&gt; (By default in MBs)&lt;/li&gt;
  &lt;li&gt;Other Options
    &lt;ul&gt;
      &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;--boot hd&lt;/code&gt; Boot from HD file&lt;/li&gt;
      &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;--force&lt;/code&gt; Force to use existing HD that is used by another VM&lt;/li&gt;
      &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;--debug&lt;/code&gt; verbose&lt;/li&gt;
      &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;--description&lt;/code&gt; Description of VM&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;4-connect-to-console&quot;&gt;4. Connect to console&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;virsh list --all&lt;/code&gt; - : List VMs&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;virsh console &amp;lt;name&amp;gt;&lt;/code&gt; - : Connect to tty of the VM
    &lt;ul&gt;
      &lt;li&gt;Note down the IP of the VM once you connect to &lt;code class=&quot;highlighter-rouge&quot;&gt;tty&lt;/code&gt;. we can &lt;code class=&quot;highlighter-rouge&quot;&gt;ssh&lt;/code&gt;
        &lt;h4 id=&quot;note-once-the-consoletty-is-active-you-can-not-reconnect-to-that-tty&quot;&gt;NOTE: Once the console/tty is active, you can not reconnect to that tty&lt;/h4&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;5-export-vm-as-qcow2&quot;&gt;5. Export VM as &lt;code class=&quot;highlighter-rouge&quot;&gt;.qcow2&lt;/code&gt;&lt;/h3&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-shell&quot; data-lang=&quot;shell&quot;&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;qemu-img convert &lt;span class=&quot;nt&quot;&gt;-f&lt;/span&gt; raw &lt;span class=&quot;nt&quot;&gt;-O&lt;/span&gt; qcow2 &amp;lt;souruce .img file&amp;gt; &amp;lt;destination .qcow2 file&amp;gt;
&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;c&quot;&gt;#Example:&lt;/span&gt;
&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;qemu-img convert &lt;span class=&quot;nt&quot;&gt;-f&lt;/span&gt; raw &lt;span class=&quot;nt&quot;&gt;-O&lt;/span&gt; qcow2 /var/lib/libvirt/images/ubuntu14-HD.img /home/opsmx/spinnaker.qcow2&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;h3 id=&quot;commands-cheatsheet&quot;&gt;Commands CheatSheet&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;virsh list --all&lt;/code&gt; - Shows all VMs&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;virsh console &amp;lt;VM name&amp;gt;&lt;/code&gt; - Connect to &lt;code class=&quot;highlighter-rouge&quot;&gt;tty&lt;/code&gt; of the VM (If &lt;code class=&quot;highlighter-rouge&quot;&gt;tty&lt;/code&gt; is enables)&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;virsh shutdown &amp;lt;VM name&amp;gt;&lt;/code&gt; - Shutdown the VM&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;vish destroy &amp;lt;VM name&amp;gt;&lt;/code&gt; - Destroys VM (Won’t deletes the VM/ Similar to shutdown)&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;vish undefine &amp;lt;VM name&amp;gt;&lt;/code&gt; - Deletes the VM (Run after &lt;code class=&quot;highlighter-rouge&quot;&gt;destroy&lt;/code&gt;)&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;virsh dumpxml &amp;lt;VM name&amp;gt;&lt;/code&gt; - Dumps configuration of VM in &lt;code class=&quot;highlighter-rouge&quot;&gt;xml&lt;/code&gt; format&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;virsh net-list&lt;/code&gt; - List the available networks&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;virsh net-edit &amp;lt;net name&amp;gt;&lt;/code&gt; - Edit the network&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;virt-install --os-variant list&lt;/code&gt; - Lists OS variants&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&quot;resource-links&quot;&gt;Resource Links&lt;/h4&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.wavether.com/2016/11/import-qcow2-images-into-aws&quot;&gt;https://www.wavether.com/2016/11/import-qcow2-images-into-aws&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://docs.openstack.org/image-guide/convert-images.html&quot;&gt;https://docs.openstack.org/image-guide/convert-images.html&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://docs.openstack.org/image-guide/convert-images.html&quot;&gt;https://serverfault.com/questions/604862/any-way-to-convert-qcow2-to-ovf&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://docs.openstack.org/image-guide/convert-images.html&quot;&gt;https://docs.openstack.org/image-guide/convert-images.html&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</content><author><name></name></author><summary type="html">1. Install Packages Check system is capable of running KVM: kvm-ok</summary></entry><entry><title type="html">Encrypt your DNS queries, stay anonymous</title><link href="https://veerendra2.github.io/dns-encrypt/" rel="alternate" type="text/html" title="Encrypt your DNS queries, stay anonymous" /><published>2018-01-22T00:00:00+05:30</published><updated>2018-01-22T00:00:00+05:30</updated><id>https://veerendra2.github.io/dns-encrypt</id><content type="html" xml:base="https://veerendra2.github.io/dns-encrypt/">&lt;p&gt;We think if we connect to a website over HTTPS is secure which is true(not true sometimes!), but what about DNS queries that you(browser) sent?&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://veerendra2.github.io/assets/https_example.jpg&quot; alt=&quot;HTTPS Example&quot; class=&quot;center-image&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Sure if we use HTTPS all your (&lt;a href=&quot;https://en.wikipedia.org/wiki/POST_(HTTP)&quot;&gt;POST&lt;/a&gt; or GET) data is encrypted end-to-end which prevents eavesdropping, &lt;a href=&quot;https://en.wikipedia.org/wiki/Man-in-the-middle_attack&quot;&gt;MITM attack&lt;/a&gt; and have &lt;a href=&quot;https://en.wikipedia.org/wiki/Confidentiality&quot;&gt;Confidentiality&lt;/a&gt;, but again what about DNS queries?&lt;/p&gt;

&lt;p&gt;I got this question back in a while, so after a quick Internet search, I found &lt;a href=&quot;https://en.wikipedia.org/wiki/DNSCrypt&quot;&gt;DNSCrypt&lt;/a&gt; protocol which is really cool that I can encrypt DNS queries.&lt;/p&gt;

&lt;p&gt;First of all what the heck is &lt;a href=&quot;https://en.wikipedia.org/wiki/Domain_Name_System&quot;&gt;DNS&lt;/a&gt;? in simple, DNS or Domain Name System is a service that resolves/translates domain “name” to “IP” or vice versa. So once you hit google.com in your browser, a &lt;a href=&quot;https://serverfault.com/questions/173187/what-does-a-dns-request-look-like&quot;&gt;DNS query&lt;/a&gt; fired to DNS host(for example 8.8.8.8) like asking “what is the IP of google.com” and gets DNS responses which contains IP of google.com. Now we got the IP of google.com, browser initiates connection and establish HTTPS.&lt;/p&gt;

&lt;p&gt;You see these DNS queries are not part of “HTTPS”. So let’s encrypt DNS queries with DNCrypt.&lt;/p&gt;

&lt;h2 id=&quot;what-is-dnscrypt&quot;&gt;What is &lt;a href=&quot;https://dnscrypt.org/&quot;&gt;DNSCrypt&lt;/a&gt;?&lt;/h2&gt;

&lt;p&gt;&lt;em&gt;DNSCrypt is a protocol that authenticates communications between a DNS client and a DNS resolver. It prevents DNS spoofing. It uses cryptographic signatures to verify that responses originate from the chosen DNS resolver and haven’t been tampered with.&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;It is an open specification, with free and opensource reference implementations, and it is not affiliated with any company nor organization.&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;There are some points to be noted&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;In order to use this protocol, we should install a package called &lt;a href=&quot;https://github.com/jedisct1/dnscrypt-proxy&quot;&gt;dnscrypt-proxy&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;Normal name servers(like 8.8.8.8) won’t support this protocol. We should use &lt;a href=&quot;https://github.com/dyne/dnscrypt-proxy/blob/master/dnscrypt-resolvers.csv&quot;&gt;these&lt;/a&gt; DNS resolvers&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;dnscrypt-proxy&lt;/code&gt; by default binds on loopback interface (127.0.0.1) 53 port. So, have to do tittle configuration change.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;1-install-dnscrypt-proxy&quot;&gt;1. Install dnscrypt-proxy&lt;/h3&gt;

&lt;p&gt;From Ubuntu 16/ Linux Mint 18.x, dnscrypt-proxy is available in the offical repo.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-shell&quot; data-lang=&quot;shell&quot;&gt;&lt;span class=&quot;nb&quot;&gt;sudo &lt;/span&gt;apt-get &lt;span class=&quot;nb&quot;&gt;install &lt;/span&gt;dnscrypt-proxy&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;For Ubuntu 14.04 and Linux Mint 17.x, we have add PPA which I found one below&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-shell&quot; data-lang=&quot;shell&quot;&gt;&lt;span class=&quot;nb&quot;&gt;sudo &lt;/span&gt;add-apt-repository ppa:anton+/dnscrypt
&lt;span class=&quot;nb&quot;&gt;sudo &lt;/span&gt;apt-get update
&lt;span class=&quot;nb&quot;&gt;sudo &lt;/span&gt;apt-get &lt;span class=&quot;nb&quot;&gt;install &lt;/span&gt;dnscrypt-proxy&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;h3 id=&quot;2-start-dnscrypt-proxy&quot;&gt;2. Start &lt;code class=&quot;highlighter-rouge&quot;&gt;dnscrypt-proxy&lt;/code&gt;&lt;/h3&gt;

&lt;p&gt;After installation, with &lt;code class=&quot;highlighter-rouge&quot;&gt;--help&lt;/code&gt; argument get options and run accordingly. But luckily I created a python script which will do it for you.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-shell&quot; data-lang=&quot;shell&quot;&gt;wget &lt;span class=&quot;nt&quot;&gt;-qO&lt;/span&gt; dnscrypt.py https://goo.gl/zjZYVR
&lt;span class=&quot;nb&quot;&gt;sudo &lt;/span&gt;python dnscrypt.py&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;After you run the script, it will lists the DNS reslovers details like below.(The script downloads &lt;a href=&quot;https://github.com/dyne/dnscrypt-proxy/blob/master/dnscrypt-resolvers.csv&quot;&gt;reslovers csv&lt;/a&gt; and passes this file as argument to &lt;code class=&quot;highlighter-rouge&quot;&gt;dnscrypt-proxy&lt;/code&gt;`)&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://veerendra2.github.io/assets/command_run.jpg&quot; alt=&quot;Run the script&quot; class=&quot;center-image&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Select one name sever. You can see these name servers have options &lt;a href=&quot;https://en.wikipedia.org/wiki/Domain_Name_System_Security_Extensions&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;DNSSec&lt;/code&gt;&lt;/a&gt; &amp;amp; &lt;code class=&quot;highlighter-rouge&quot;&gt;No Loggging&lt;/code&gt; which provider can logs your queries, choose one accordingly (These options/table header you cant see in above screeshot. You have to scroll up)&lt;/p&gt;

&lt;p&gt;Next, configure your network settings like below&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://veerendra2.github.io/assets/network_config.jpeg&quot; alt=&quot;Network Config&quot; class=&quot;center-image&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Restart network (disconnect and connect wifi) and your done!&lt;/p&gt;

&lt;p&gt;To verify run &lt;code class=&quot;highlighter-rouge&quot;&gt;tcpdump -i any -n port 2053&lt;/code&gt; (Why &lt;code class=&quot;highlighter-rouge&quot;&gt;2053&lt;/code&gt; port? because in above screenshot I selected &lt;code class=&quot;highlighter-rouge&quot;&gt;66&lt;/code&gt; option which has &lt;code class=&quot;highlighter-rouge&quot;&gt;178.216.201.222:2053&lt;/code&gt;)&lt;/p&gt;

&lt;h5 id=&quot;whats-happening&quot;&gt;What’s happening?&lt;/h5&gt;

&lt;p&gt;&lt;img src=&quot;https://veerendra2.github.io/assets/diagram.png&quot; alt=&quot;Diagram&quot; class=&quot;center-image&quot; /&gt;&lt;/p&gt;

&lt;h2 id=&quot;go-beyond-this-script&quot;&gt;Go beyond this script!&lt;/h2&gt;
&lt;p&gt;I create &lt;code class=&quot;highlighter-rouge&quot;&gt;init&lt;/code&gt; script which runs at system boot. So that no need to run above script again and again.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Download &lt;a href=&quot;https://github.com/dyne/dnscrypt-proxy/blob/master/dnscrypt-resolvers.csv&quot;&gt;reslovers csv&lt;/a&gt; file with –&amp;gt; &lt;code class=&quot;highlighter-rouge&quot;&gt;python dsncrypt.py -d&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;Specify &lt;code class=&quot;highlighter-rouge&quot;&gt;resolver_name&lt;/code&gt;(By default it has &lt;code class=&quot;highlighter-rouge&quot;&gt;soltysiak&lt;/code&gt; which has &lt;code class=&quot;highlighter-rouge&quot;&gt;No Logging&lt;/code&gt; policy and &lt;code class=&quot;highlighter-rouge&quot;&gt;DNSSec&lt;/code&gt;) in the script.&lt;/li&gt;
&lt;/ul&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-shell&quot; data-lang=&quot;shell&quot;&gt;&lt;span class=&quot;nb&quot;&gt;sudo &lt;/span&gt;wget &lt;span class=&quot;nt&quot;&gt;-O&lt;/span&gt; /etc/init.d/encryptdns https://goo.gl/opZ78J
&lt;span class=&quot;nb&quot;&gt;sudo chmod&lt;/span&gt; +x /etc/init.d/encryptdns
&lt;span class=&quot;nb&quot;&gt;sudo &lt;/span&gt;update-rc.d encryptdns defaults
&lt;span class=&quot;nb&quot;&gt;sudo &lt;/span&gt;service encryptdns start&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;blockquote&gt;
  &lt;p&gt;Github Repository Link&lt;/p&gt;

  &lt;p&gt;https://github.com/veerendra2/useless-scripts&lt;/p&gt;
&lt;/blockquote&gt;</content><author><name></name></author><summary type="html">We think if we connect to a website over HTTPS is secure which is true(not true sometimes!), but what about DNS queries that you(browser) sent?</summary></entry><entry><title type="html">Wifi De-authentication attack</title><link href="https://veerendra2.github.io/wifi-deathentication-attack/" rel="alternate" type="text/html" title="Wifi De-authentication attack" /><published>2018-01-11T00:00:00+05:30</published><updated>2018-01-11T00:00:00+05:30</updated><id>https://veerendra2.github.io/wifi-deathentication-attack</id><content type="html" xml:base="https://veerendra2.github.io/wifi-deathentication-attack/">&lt;blockquote&gt;
  &lt;p&gt;A Wi-Fi deauthentication attack is a type of denial-of-service attack that targets communication between a user and a Wi-Fi wireless access point.&lt;/p&gt;

  &lt;p&gt;-Wikipedia&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;As you can see, this type of attack is pretty powerful and difficult  to detect who is attacking. There are some tools(like “aircrack-ng”) for this attack(You can check the commands &lt;a href=&quot;https://www.aircrack-ng.org/doku.php?id=deauthentication&quot;&gt;here&lt;/a&gt;).&lt;/p&gt;

&lt;p&gt;So, basically the concept is the attacker broadcasts a wifi management “De-authentication” frame to victim’s to tell deauthenticate. It is like, “Hey client! Can you please deauthenticate and authenticate”. Then the client will reconnect to the AP (Access Point). These types of frames are supposed to send by valid “AP” to its clients, but the attacker can mimic these frames and broadcasts in the network.&lt;/p&gt;

&lt;p&gt;Interestingly, the victim’s laptop/device could not differentiate between attacker and valid AP. Here, the attacker creates “De-authentication” packet/frame with source MAC address from valid AP’s MAC address. So, every device thinks, the management frame came from valid AP.&lt;/p&gt;

&lt;p&gt;The attacker not just send the frame once, but sends continuously. Things get pretty bad, now the clients continuously trying to reconnect. In this way, the clients never connect to its valid AP until the attacker stops sending the “deauth” frames.&lt;/p&gt;

&lt;p&gt;I automated these steps with Python. I used “scapy” module to send “deauth” frames.&lt;/p&gt;

&lt;p&gt;Want to try this script? run bellow commands.&lt;/p&gt;

&lt;h5 id=&quot;dependencies&quot;&gt;Dependencies&lt;/h5&gt;

&lt;p&gt;Install &lt;code class=&quot;highlighter-rouge&quot;&gt;aircrack-ng&lt;/code&gt; and &lt;code class=&quot;highlighter-rouge&quot;&gt;scapy&lt;/code&gt;&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-shell&quot; data-lang=&quot;shell&quot;&gt;&lt;span class=&quot;nb&quot;&gt;sudo &lt;/span&gt;apt-get &lt;span class=&quot;nb&quot;&gt;install &lt;/span&gt;aircrack-ng &lt;span class=&quot;nt&quot;&gt;-y&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;sudo &lt;/span&gt;apt-get &lt;span class=&quot;nb&quot;&gt;install &lt;/span&gt;python-scapy &lt;span class=&quot;nt&quot;&gt;-y&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;h5 id=&quot;download-and-run-the-script&quot;&gt;Download and run the script&lt;/h5&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-shell&quot; data-lang=&quot;shell&quot;&gt;&lt;span class=&quot;nb&quot;&gt;sudo &lt;/span&gt;wget &lt;span class=&quot;nt&quot;&gt;-O&lt;/span&gt; deauth.py https://goo.gl/5gGHbE
&lt;span class=&quot;nb&quot;&gt;sudo &lt;/span&gt;python deauth.py&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;When you run the command, you should see like bellow.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://veerendra2.github.io/assets/cmd_run.jpg&quot; alt=&quot;Command Run&quot; class=&quot;center-image&quot; /&gt;&lt;/p&gt;

&lt;p&gt;When you start the script, it will create “mon0” interface(A monitoring virtual interface used to send our deauth frames) and observes wifi signals. After few seconds, it will display near APs and its MAC addresses. Choose one to broadcasts the “deauth” frames to that network which results network outage for connected clients to that AP.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;NOTE: Inorder to work deauthentication attack successful, you should near to the target network. The deauth packets should reach the connected devices of the target network&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2 id=&quot;so-how-to-avoid-this-attack&quot;&gt;So, how to avoid this attack?&lt;/h2&gt;

&lt;p&gt;Simple, use “802.1w” supported routers. Know more about &lt;a href=&quot;https://en.wikipedia.org/wiki/IEEE_802.11w-2009&quot;&gt;802.1w&lt;/a&gt; and read &lt;a href=&quot;http://www.cisco.com/c/en/us/td/docs/wireless/controller/technotes/5700/software/release/ios_xe_33/11rkw_DeploymentGuide/b_802point11rkw_deployment_guide_cisco_ios_xe_release33/b_802point11rkw_deployment_guide_cisco_ios_xe_release33_chapter_0100.pdf&quot;&gt;cisco document&lt;/a&gt; here&lt;/p&gt;

&lt;p&gt;Check out my repo below for more info. Use my &lt;a href=&quot;https://github.com/veerendra2/wifi-sniffer&quot;&gt;docker image&lt;/a&gt; to kick the environment quickly.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;Github Repository Link&lt;/p&gt;

  &lt;p&gt;https://github.com/veerendra2/wifi-deauth-attack&lt;/p&gt;
&lt;/blockquote&gt;</content><author><name></name></author><summary type="html">A Wi-Fi deauthentication attack is a type of denial-of-service attack that targets communication between a user and a Wi-Fi wireless access point. -Wikipedia</summary></entry><entry><title type="html">GNU screen commands(Cheat Sheet)</title><link href="https://veerendra2.github.io/gnu-screen-commands/" rel="alternate" type="text/html" title="GNU screen commands(Cheat Sheet)" /><published>2018-01-08T00:00:00+05:30</published><updated>2018-01-08T00:00:00+05:30</updated><id>https://veerendra2.github.io/gnu-screen-commands</id><content type="html" xml:base="https://veerendra2.github.io/gnu-screen-commands/">&lt;blockquote&gt;
  &lt;p&gt;GNU Screen is a terminal multiplexer, a software application that can be used to multiplex several virtual consoles, allowing a user to access multiple separate login sessions inside a single terminal window, or detach and reattach sessions from a terminal. It is useful for dealing with multiple programs from a command line interface, and for separating programs from the session of the Unix shell that started the program, particularly so a remote process continues running even when the user is disconnected. &lt;a href=&quot;https://en.wikipedia.org/wiki/GNU_Screen&quot;&gt;more&lt;/a&gt;&lt;/p&gt;

  &lt;p&gt;-Wikipedia&lt;/p&gt;
&lt;/blockquote&gt;

&lt;ul&gt;
  &lt;li&gt;Install &lt;code class=&quot;highlighter-rouge&quot;&gt;screen&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-shell&quot; data-lang=&quot;shell&quot;&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;sudo &lt;/span&gt;apt-get &lt;span class=&quot;nb&quot;&gt;install &lt;/span&gt;screen&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;style&gt;
.tablelines table, .tablelines td, .tablelines th {
        border: 2px solid black;
        }
&lt;/style&gt;

&lt;table class=&quot;tablelines&quot;&gt;
&lt;tr&gt;
 &lt;th&gt;Keys/Commands&lt;/th&gt;&lt;th&gt;Description&lt;/th&gt;
&lt;/tr&gt;
&lt;tr&gt;
 &lt;td&gt;screen&lt;/td&gt;&lt;td&gt;Enables Screen&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
 &lt;td&gt;Ctrl+a and then c&lt;/td&gt;&lt;td&gt;Create new screen&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
 &lt;td&gt;Ctrl+a and then n&lt;/td&gt;&lt;td&gt;Go to next screen&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
 &lt;td&gt;Ctrl+a and then p&lt;/td&gt;&lt;td&gt;Go to previous screen&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
 &lt;td&gt;Ctrl+a and then Shift+s&lt;/td&gt;&lt;td&gt;Split screen horizontally&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
 &lt;td&gt;Ctrl+a and then Shift+\&lt;/td&gt;&lt;td&gt;Split screen vertically&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
 &lt;td&gt;Ctrl+a and then Tab&lt;/td&gt;&lt;td&gt;Traverse between splited screens&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
 &lt;td&gt;Ctrl+a and then Shift+x&lt;/td&gt;&lt;td&gt;Unsplit screens&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
 &lt;td&gt;Ctrl+a and then Esc (Hit Esc, once you are done)    &lt;/td&gt;&lt;td&gt;Scroll screen&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
 &lt;td&gt;Ctrl+a and then d&lt;/td&gt;&lt;td&gt;Detach screens&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
 &lt;td&gt;screen -r PID&lt;/td&gt;&lt;td&gt;Reattach screen&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
 &lt;td&gt;screen -ls&lt;/td&gt;&lt;td&gt;List screens&lt;/td&gt;
&lt;/tr&gt;
&lt;/table&gt;</content><author><name></name></author><summary type="html">GNU Screen is a terminal multiplexer, a software application that can be used to multiplex several virtual consoles, allowing a user to access multiple separate login sessions inside a single terminal window, or detach and reattach sessions from a terminal. It is useful for dealing with multiple programs from a command line interface, and for separating programs from the session of the Unix shell that started the program, particularly so a remote process continues running even when the user is disconnected. more -Wikipedia</summary></entry><entry><title type="html">Install jekyll in Ubuntu 14.04</title><link href="https://veerendra2.github.io/jeklly-website/" rel="alternate" type="text/html" title="Install jekyll in Ubuntu 14.04" /><published>2018-01-07T00:00:00+05:30</published><updated>2018-01-07T00:00:00+05:30</updated><id>https://veerendra2.github.io/jeklly-website</id><content type="html" xml:base="https://veerendra2.github.io/jeklly-website/">&lt;p&gt;I was very excited to try &lt;a href=&quot;https://jekyllrb.com/&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;Jekyll&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;https://pages.github.com/&quot;&gt;Github Pages&lt;/a&gt; when I heard about it. When I try to install &lt;code class=&quot;highlighter-rouge&quot;&gt;jekyll&lt;/code&gt;, I got below error&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-shell&quot; data-lang=&quot;shell&quot;&gt;root@veeru:/home/veeru# gem &lt;span class=&quot;nb&quot;&gt;install &lt;/span&gt;jekyll bundler
Fetching: public_suffix-3.0.1.gem &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;100%&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
ERROR:  Error installing jekyll:
	public_suffix requires Ruby version &lt;span class=&quot;o&quot;&gt;&amp;gt;=&lt;/span&gt; 2.1.
Fetching: bundler-1.16.1.gem &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;100%&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
Successfully installed bundler-1.16.1
1 gem installed
Installing ri documentation &lt;span class=&quot;k&quot;&gt;for &lt;/span&gt;bundler-1.16.1...
Installing RDoc documentation &lt;span class=&quot;k&quot;&gt;for &lt;/span&gt;bundler-1.16.1...&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;I din’t even know what that means(I’m not a Ruby guy, so..). Clearly &lt;code class=&quot;highlighter-rouge&quot;&gt;jekyll&lt;/code&gt; needs more then Ruby version 2.1, but in Ubuntu 14.04 if you type &lt;code class=&quot;highlighter-rouge&quot;&gt;apt-get install ruby -y&lt;/code&gt; you will end up having Ruby 1.9. So lets install Ruby2.4 like below&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-shell&quot; data-lang=&quot;shell&quot;&gt;&lt;span class=&quot;nb&quot;&gt;sudo &lt;/span&gt;apt-add-repository ppa:brightbox/ruby-ng
&lt;span class=&quot;nb&quot;&gt;sudo &lt;/span&gt;apt-get update
&lt;span class=&quot;nb&quot;&gt;sudo &lt;/span&gt;apt-get &lt;span class=&quot;nb&quot;&gt;install &lt;/span&gt;ruby2.4 ruby2.4-dev make g++ &lt;span class=&quot;nt&quot;&gt;-y&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Then install &lt;code class=&quot;highlighter-rouge&quot;&gt;jekyll&lt;/code&gt;&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-shell&quot; data-lang=&quot;shell&quot;&gt;gem &lt;span class=&quot;nb&quot;&gt;install &lt;/span&gt;jekyll bundler&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;h3 id=&quot;whats-next&quot;&gt;What’s next?&lt;/h3&gt;
&lt;p&gt;I found a blog which exactly I was look for to deploy website on Github Pages. As Drew Silcock said in the blog, it better to maintain website source code and compiled website on same repository. Just head over to his &lt;a href=&quot;https://drewsilcock.co.uk/custom-jekyll-plugins&quot;&gt;blog&lt;/a&gt; and check the stuff&lt;/p&gt;</content><author><name></name></author><summary type="html">I was very excited to try Jekyll and Github Pages when I heard about it. When I try to install jekyll, I got below error root@veeru:/home/veeru# gem install jekyll bundler Fetching: public_suffix-3.0.1.gem (100%) ERROR: Error installing jekyll: public_suffix requires Ruby version &amp;gt;= 2.1. Fetching: bundler-1.16.1.gem (100%) Successfully installed bundler-1.16.1 1 gem installed Installing ri documentation for bundler-1.16.1... Installing RDoc documentation for bundler-1.16.1...</summary></entry><entry><title type="html">MAC Address Scrambling in Linux</title><link href="https://veerendra2.github.io/mac-scrambling/" rel="alternate" type="text/html" title="MAC Address Scrambling in Linux" /><published>2018-01-06T00:00:00+05:30</published><updated>2018-01-06T00:00:00+05:30</updated><id>https://veerendra2.github.io/mac-scrambling</id><content type="html" xml:base="https://veerendra2.github.io/mac-scrambling/">&lt;p&gt;“&lt;strong&gt;MAC Address Scrambling&lt;/strong&gt;“- By name itself we can understand, instead of using burned-in address, the machines uses random MAC address every time. The machine/device changes MAC address regularly to improve security.  MAC address is 48 bit hexadecimal digit which is burned in every electronic device has capability of “connectivity” such as mobile devices, smart TV, PC, etc. “Apple” added this feature to iPhones from iOS8 to protect user’s privacy.&lt;/p&gt;

&lt;p&gt;So, how static MAC address causes some security issues?  First thing caught in my mind is this&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;According to Edward Snowden, the National Security Agency has a system that tracks the movements of everyone in a city by monitoring the MAC addresses of their electronic devices. As a result of users being trackable by their devices’ MAC addresses, Apple has started using random MAC addresses in their iOS line of devices while scanning for networks.If random MAC addresses are not used, researchers have confirmed that it is possible to link a real identity to a particular wireless MAC address.&lt;/p&gt;

  &lt;p&gt;-wikipedia&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;As I said it is “Burned-in”, means it never changes which network you connect unlike IP address. Another possible attack is “Man-in-Middle” with ARP poisoning. I highly recommend you to read &lt;a href=&quot;https://en.wikipedia.org/wiki/ARP_spoofing&quot;&gt;wikipedia article: ARP spoofing&lt;/a&gt; for better understanding of ARP poisoning.  IEEE group also recommends  random MAC address for Wifi security. Read this &lt;a href=&quot;http://www.csoonline.com/article/2945044/cyber-attacks-espionage/ieee-groups-recommends-random-mac-addresses-for-wi-fi-security.html&quot;&gt;article&lt;/a&gt; for more info&lt;/p&gt;

&lt;p&gt;For Linux, soon will get this feature. But now, I made a script(init script: I know init scripts are not meant for this, but made it!) which changes MAC address on every time machine boots. Not only on boot, we can change whenever we want with simple command and can restore to original or we can go one step further with cron job to schedule the script that changes MAC address for every 1 hour or 30 minutes (Depends on your need).&lt;/p&gt;

&lt;p&gt;It is a shell script uses &lt;a href=&quot;http://manpages.ubuntu.com/manpages/xenial/man1/macchanger.1.html&quot;&gt;macchanger&lt;/a&gt;, which executes every time machine boots thus the interface gets random MAC address every time.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;&lt;strong&gt;NOTE&lt;/strong&gt;: The “macchanger” or any other script never changes the device’s actual MAC address which is burned on the interface, but macchanger create a proxy which machines uses this proxy MAC address for network communication&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2 id=&quot;how-to-install&quot;&gt;How to install?&lt;/h2&gt;

&lt;ol&gt;
  &lt;li&gt;
    &lt;p&gt;Install &lt;code class=&quot;highlighter-rouge&quot;&gt;macchanger&lt;/code&gt;&lt;/p&gt;

    &lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;
sudo apt-get update &amp;amp;&amp;amp; sudo apt-get install macchanger -y
&lt;/code&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Download and place &lt;code class=&quot;highlighter-rouge&quot;&gt;changer&lt;/code&gt; script in /etc/init.d/&lt;/p&gt;

    &lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;
wget -q -O /etc/init.d/changer https://goo.gl/tRfoJo
&lt;/code&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Give executable permission&lt;/p&gt;

    &lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;
sudo chmod +x /etc/init.d/changer
&lt;/code&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Run update-rc.d&lt;/p&gt;

    &lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;
sudo update-rc.d changer defaults
&lt;/code&gt;&lt;/p&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Or simply, you can run my One Installer script and choose ‘Changer init script’ in menu as you see in below screenshot&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/one_installer.jpg&quot; alt=&quot;_config.yml&quot; /&gt;&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-shell&quot; data-lang=&quot;shell&quot;&gt;wget &lt;span class=&quot;nt&quot;&gt;-qO&lt;/span&gt; oneInstaller.py https://goo.gl/ZcideY &lt;span class=&quot;o&quot;&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;sudo &lt;/span&gt;python oneInstaller.py&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;h3 id=&quot;commands&quot;&gt;Commands&lt;/h3&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-shell&quot; data-lang=&quot;shell&quot;&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;service changer restore &lt;span class=&quot;c&quot;&gt;# To restores original MAC&lt;/span&gt;
MAC Address Restored 0X:XX:XX:27:d8:XX

&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;sudo &lt;/span&gt;service changer new &lt;span class=&quot;c&quot;&gt;# To assign new MAC. Note that, interface will go down and up&lt;/span&gt;
MAC Address Changed Succefully

&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;service changer show &lt;span class=&quot;c&quot;&gt;# To shows current MAC&lt;/span&gt;
Current MAC: 08:00:0c:27:d8:39&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;&lt;strong&gt;NOTE:&lt;/strong&gt;&lt;/p&gt;
&lt;ol&gt;
  &lt;li&gt;Change the interface in &lt;code class=&quot;highlighter-rouge&quot;&gt;changer&lt;/code&gt; after you download, by default the interface is &lt;code class=&quot;highlighter-rouge&quot;&gt;wlan0&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;There will be network restart when you run  &lt;code class=&quot;highlighter-rouge&quot;&gt;service changer new&lt;/code&gt; or &lt;code class=&quot;highlighter-rouge&quot;&gt;service changer restore&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;Kali Linux’s latest version(kali-rolling) has this feature. While upgrading(apt-get install upgrade), there is macchanger prompt asking to enable this feature.&lt;/li&gt;
&lt;/ol&gt;</content><author><name></name></author><summary type="html">“MAC Address Scrambling“- By name itself we can understand, instead of using burned-in address, the machines uses random MAC address every time. The machine/device changes MAC address regularly to improve security. MAC address is 48 bit hexadecimal digit which is burned in every electronic device has capability of “connectivity” such as mobile devices, smart TV, PC, etc. “Apple” added this feature to iPhones from iOS8 to protect user’s privacy.</summary></entry></feed>